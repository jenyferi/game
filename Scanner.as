package {		public class Scanner {			public static const DIR_DOWN:String = "DIR_DOWN";		public static const DIR_RIGHT:String = "DIR_RIGHT";		private var _board:Array;		private var _r:int;		private var _c:int;		private var _end:int;		private var _dir:String;		private var _cursor:int;				public function Scanner(board:Array, r:int, c:int, end:int, dir:String) {			_board = board;			_r = r;			_c = c;			_end = end;			_dir = dir;						if (_dir != DIR_DOWN) {				if (_dir != DIR_RIGHT) {					throw new Error("Invalid direction passed to scanner");				} else {					_cursor = _c;				}			} else {				_cursor = _r;			}		}			public function next():I {			var i:I = null;						if (_cursor >= _end) {				return null;			}			if (_dir != DIR_DOWN) {				if (_dir != DIR_RIGHT) {					throw new Error("Corrupt direction scan state");				}				i = new I(_r,_cursor,_board[_r][_cursor]);				_cursor++;			} else {				i = new I(_cursor,_c,_board[_cursor][_c]);				_cursor++;			}						return i;		}			public function slice(arg1:int, arg2:int):Scanner {			if (_dir == DIR_DOWN) {				return new Scanner(_board, _cursor + arg1, _c, arg2 + _cursor, _dir);			}			if (_dir != DIR_RIGHT) {				throw new Error("Corrupt direction scan state");			}			return new Scanner(_board, _r, arg1 + _cursor, arg2 + _cursor, _dir);		}			public function toString():String {			return "scanner " + "row: " + _r + " col: " + _c + " end: " + _end + " dir: " + _dir + " cursor: " + _cursor;		}	}}