package {	import flash.display.MovieClip;	import flash.utils.getDefinitionByName;	import flash.filters.GlowFilter;	import flash.filters.BitmapFilterQuality;	public class Ball extends MovieClip {		private var _rowNo:int;		private var _colNo:int;		private var _ballMC:MovieClip;		private var _kind:int;		private var _maxKinds:int = 7;				public function Ball() {			setBallType();		}		public function setBallType():void {			_kind = Math.ceil(Math.random() * _maxKinds);			var ballName:String = "Ball" + _kind;			var ballClass:* = getDefinitionByName(ballName) as Class;			_ballMC = new ballClass();			addChild(_ballMC);		}		public function select():void {			var glow:GlowFilter = new GlowFilter(0xD4EFF2, 1, 12, 12, 3, BitmapFilterQuality.HIGH);			_ballMC.filters = [glow];		}		public function unselect():void {			_ballMC.filters = [];		}		public function isNeighbor(ball:Ball):Boolean {			var isNeighbor:Boolean = false;						if (_rowNo != ball.getRow()) {				if (_colNo == ball.getCol()) {					if (_rowNo == (ball.getRow() - 1) || _rowNo == ball.getRow() + 1) {						isNeighbor = true;					}				}			} else if (_colNo == (ball.getCol() - 1) || _colNo == ball.getCol() + 1) {				isNeighbor = true;			}						return isNeighbor;		}		public function setRowandCol(row:int, col:int):void {			_rowNo = row;			_colNo = col;		}		public function changeKind():void {			_kind = 0;		}				public function changeToBlank():void {			removeChild(_ballMC);			_ballMC = new Ball0();			addChild(_ballMC);		}		public function getRow():int {			return _rowNo;		}		public function getCol():int {			return _colNo;		}		public function getKind():int {			return _kind;		}	}}